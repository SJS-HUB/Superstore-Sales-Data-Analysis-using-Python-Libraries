# -*- coding: utf-8 -*-
"""Superstore Sales Data Analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1L98FJXpORpMd-AjWwAY6O2H5aIx49aE2
"""

import pandas as pd

df = pd.read_excel('/content/Sample - Superstore (1).xls')

df

df.head(10)

df.tail(10)

df.info()

df[['Sales','Quantity','Discount','Profit']].describe() #statistics of the dataset

df.isnull().sum() #if 0 for every column then that means there are no missing values

#if there are missing values # data imputation

df['Sales_new'] = df['Sales'].fillna(0)

#how to fill it with median of the same column
df['Sales_new1'] = df['Sales'].fillna(df['Sales'].median())

df

#create a column to get the profit margin?

df['Proft_Margin'] = df['Profit']/ df['Sales']

df

#start visualizing this dataset

import seaborn as sbn

sbn.countplot(data= df, x='Category')

sbn.scatterplot(x='Sales', y='Profit', hue='Category', data= df)

import numpy as np #numerical computations

a= np.array([1,2,3])

a

b= np.array([5,6,7])

#Dot product
np.dot(a,b)

c= np.array([[1,2,3],[5,6,7]])
d= np.array([[9,10,11],[12,13,14]])

c

d

d.transpose()

np.matmul(c,d.transpose())

x= np.array([1,2,3,4,5,6,7,8,9])

x[x>5]

np.percentile(x, 25)

np.percentile(x, 50)

np.percentile(x, 75)

np.ptp(x) #range --> max- min (9-1)

np.mean(x)

np.median(x)

np.std(x)

# https://numpy.org/doc/2.2/user/quickstart.html

np.sum(x)

len(x)

np.max(x)

np.min(x)

y= 2.34567

round(y,2)

df.groupby(['Category'])['Sales'].mean()

#Get the sum of sales for each Sub-Category

df.groupby(['Sub-Category'])['Sales'].sum()

df.groupby(['Category','Sub-Category'])['Sales'].sum()

#Get the sum of sales for each Sub-Category, sub-category with max sales on top (sort in descending)

df.groupby(['Sub-Category'])['Sales'].sum().sort_values(ascending=False)

#top 3 sub-categories that has max sales
df.groupby(['Sub-Category'])['Sales'].sum().sort_values(ascending=False).head(3)

df.groupby(['Sub-Category'])['Sales'].sum().head(3).sort_values(ascending=False)

#visualizing using seaborn

#chart that shows percentiles?

sbn.boxplot(x='Category', y ='Quantity', data = df)

df['Profit']>50

df[df['Profit']>50] #filtering

xx= df[['Profit', 'Sales', 'Quantity', "Category"]]
sbn.pairplot(xx, hue="Category")

.W